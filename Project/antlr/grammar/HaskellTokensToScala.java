
public class HaskellTokensToScala extends HaskellBaseListener {

    private StringBuilder fileContents = new StringBuilder();
    
    HaskellTokensToScala(){
        
    }
    
    /**
     * Generates the Scala file header.
     */
    @Override 
    public void enterProgram(HaskellParser.ProgramContext ctx) { 
        
        fileContents.append(  "/** Autogenerated SCALA Code by antlr parser.\n"
                            + "  * Original Develop: Zayd Hammoudeh (zayd.hammoudeh@sjsu.edu)\n"
                            + "  */");
        
    }

    /**
     * Entry to the haskell function.
     * 
     * @param ctx ANTLR Context
     */
    @Override
    public void enterFunc(HaskellParser.FuncContext ctx) { 
        
        fileContents.append(  "def " + ctx.FUNC_NAME().getText());
        
    }
    
    
    /**
     * Defines the Scala code when starting the type signature (i.e. input parameters)
     * for a Haskell function.
     * 
     * @param ctx ANTLR Context
     */
    @Override 
    public void enterTypesignature(HaskellParser.TypesignatureContext ctx) { 
        fileContents.append("(");
    }
    
    /**
     * At the end of a type signature, close the function definition
     */
    @Override 
    public void exitTypesignature(HaskellParser.TypesignatureContext ctx) { 
        fileContents.append(  ") = {");
    }
    
    @Override 
    public void exitFunc(HaskellParser.FuncContext ctx) { 
        fileContents.append(  "\n} // End of function: \"" + ctx.FUNC_NAME().getText() + "\"\n\n");
    }
    
    @Override
    public String toString(){
        return fileContents.toString();
    }
    
}
